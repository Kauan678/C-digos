#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdlib>

//Primeira parte do c√≥digo dos estressados

bool existem (std::vector<int> vetor, int numero)
{
    for (int i = 0; i < vetor.size(); i++) {
        if (vetor[ i ] == numero) {
            return true;
        }
    }
    return false;
}
int contando (std::vector<int> vetor, int numero)
{
    int a = 0;
    for (int i = 0; i < vetor.size(); i++) {
        if (vetor[ i ] == numero) {
            a = a + 1;
        }
    }
    return a;
}
int procurando_valor (std::vector<int> lista, int numero)
{
    for (int i = 0; i < lista.size(); i++) {
        if (lista[ i ] == numero) {
            return 1;
        }
    }
    return -1;
}
int valor_a_partir_de (std::vector<int> lista, int numero, int iniciar)
{
    for (int i = iniciar; i < lista.size(); i++) {
            if (lista[ i ] == numero) {
                return i;
            }
    }

}
int procurando_menor_valor (std::vector<int> lista)
{
    int a = RAND_MAX;
        for (int i = 0; i < lista.size(); i++) {
            if (a > lista[ i ]) {
                a = lista[ i ];
            }
        }
    return a;
}

int procurando_a_menor_posicao(std::vector<int> lista)
{
    int a = procurando_a_menor_posicao(lista);
    int b = valor_a_partir_de(lista, a, 0);
    return b;
}
int procurando_menor_posicao_a_partir_de(std::vector<int> lista, int ini)
{   
    int a = procura_menor(lista);
    int b = valor_apartir(lista, a, iniciar);
    return b;
}
int procurando_melhor_posicao_ss(std::vector<int> lista)
{   
    int a = 0;
    for (int i = 0; i < lista.size(); i++) {
        if (lista[ i ] > 0) {
            a = 1;
            i = lista.size();
        } else {
            a = -1;
        }
    }
    return a;
}
float calculando_estresse_medio(std::vector<int> lista)
{       float resto;
        int soma = 0;
        for (int i = 0; i < lista.size(); i++) {
            if (lista[ i ] < 0) {
                soma += lista[ i ] * -1;
                }
            if (lista[ i ] > 0) {
                soma += lista[ i ];
            }
        resto = soma / lista.size();        
        }
    return resto;    
}
std::string mais_homens_ou_mais_mulheres(std::vector<int> lista)
{
    int homens = 0;
    int mulheres = 0;
        for (int i = 0; i < lista.size(); i++) {
            if (lista[ i ] > 0) {
                homens++ ;
            } else {
                mulheres++;
            }
        }
        if (homens > mulheres) {
            return "Homens";
        } else {}
        if (mulheres > homens) {
            return "Mulheres";
        } else {}
        if (homens == mulheres) {
            return "Empate";
        } 
}
std::string metade_mais_estressada (std::vector<int> lista)
{
    int primeiraMetade = 0;
    int segundaMetade = 0;
    int tamanho = lista.size() / 2;
        for (int i = 0; i < tamanho; i++) {
            if (lista[ i ] > 0) {
                primeiraMetade += lista[ i ];
            } else {
                primeiraMetade += lista[ i ] * -1;
            }
        }
        for (tamanho; tamanho < lista.size(); tamanho++) {
            if (lista[ tamanho ] > 0) {
                segundaMetade += lista[ tamanho ];
            } else {
                segundaMetade += lista[ tam ] * -1;
            }
        }
        if (primeiraMetade > segundaMetade) {
            return "Primeira";
        }
        if (segundaMetade > primeiraMetade) {
            return "Segunda";
        }
        if (primeiraMetade == segundaMetade) {
            return "Empate";
        }
}
bool homens_sao_mais_estressados_que_mulheres(std::vector<int> lista)
{
    int homens{}, somam{}, mulheres{}, soma{};
    float resto{}, res{};
        for(int i = 0; i < lista.size(); i++) {
            if(lista[ i ] > 0) {
                soma += lista[ i ];
                homens++;
            }
            if (lista[ i ] < 0){
                somam += lista[ i ] * -1;
                mulheres++;
            }
        }
        resto = soma / homens;
        res = somam / mulheres;
        if (resto > res) {
            return true;
        } else {
            return false;
        }

}

int main()
{
    {
        std::cout << "\n --- Existem --- \n";
    std::cout << existem({-1, -50, -99}, -1) << "\n"; // 1
    std::cout << existem({-1, -50, -99}, 10);         // 0
    
        std::cout << "\n --- Contagem --- \n";
    std::cout << contando({-1, -50, -1, -99}, -1) << "\n";// 2
    std::cout << contando({-1, -50, -1, -99}, 10);        // 0
    
        std::cout << "\n--- Procurando ---\n";
    std::cout << procurando_valor({-1, -50, -1 -99}, -50) << "\n"; // 1
    std::cout << procurando_valor({-1, -50, -1, -99}, 10) ; // -1
    }

    {
        std::cout << "\n--- Procurando posicao inicial ---\n";
    std::cout << valor_a_partir_de({5, 3, -1, -50, -1, -99}, -1, 0) <<"\n"; // 2
    std::cout << valor_a_partir_de({5, 3, -1, -50, -1, -99}, -1, 3) <<"\n"; // 4
    std::cout << valor_a_partir_de({5, 3, -1, -50, -1, -99}, -1, 4); // 4

        std::cout << "\n--- Procurando menor ---\n";
    std::cout << procurando_menor_valor({5, 3, -1, -50, -1, -99}); // -99
     
        std::cout <<"\n--- Procurando a posicao do menor ---\n";
    std::cout << procurando_a_menor_posicao({5, 3, -1, -50, -1, -99}); // 5

        std::cout << "\n --- Procurando menor na posicao a partir da posicao --- \n";
    std::cout << procurando_a_menor_posicao_a_partir_de({5, 3, -1, -50, -1, 10}, 3); // 3

        std::cout <<"\n --- Homem mais calmo --- \n";
    std::cout << procurando_melhor_posicao_ss({5, 3, -1, -50, -1, -99}) << "\n"; // 1
    std::cout << procurando_melhor_posicao_ss({-1, -50, -1, -99}); // -1
    }

    {
        std::cout << "\n --- Media de estress --- \n";
    std::cout << calculando_estresse_medio({5, 3, -1, -50, -1, -99});

        std::cout << "\n --- Mais homens ou mais mulheres --- \n";
    std::cout << mais_homens_ou_mais_mulheres({5, 3, -1, -50, -1, -99}) << "\n"; // "mulheres"
    std::cout << mais_homens_ou_mais_mulheres({5, 3, 1, -50, -1, -99}) << "\n"; // "empate"
    std::cout << mais_homens_ou_mais_mulheres({5, 3, 1, -50, -1, 99}); // "homens"

        std::cout << "\n --- Metade mais estressada --- \n";
    std::cout << metade_mais_estressada({5, 3, -1, -50, -1, -99}) << "\n"; // "segunda"
    std::cout << metade_mais_estressada({50, 98, 2, -50, -1, -99}) << "\n"; // "empate"
    std::cout << metade_mais_estressada({-51, 99, 1, -50, -1, -99}); // "primeira"

        std::cout << "\n --- Homens sao mais estressados que mulheres --- \n";
    std::cout << homens_sao_mais_estressados_que_mulheres({5, 3, 1, -50, -1, -99}) << "\n"; // 0
    std::cout << homens_sao_mais_estressados_que_mulheres({50, 98, 2, -40, -1, -9}); // 1
    }
    return 0;
}
